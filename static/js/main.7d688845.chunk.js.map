{"version":3,"sources":["logo.svg","components/Task.js","components/TaskDisplay.js","components/TaskInput.js","components/TaskManager.js","App.js","reportWebVitals.js","index.js"],"names":["Task","dataParam","handleRemove","console","log","id","useState","task","data","className","checked","setChecked","classes","makeStyles","Paper","width","textAlign","display","gridTemplateColumns","useStyles","motion","div","style","initial","opacity","animate","Checkbox","onChange","event","target","Button","size","color","variant","justifySelf","borderRadius","startIcon","disableElevation","onClick","TaskDisplay","activeTasks","removeTask","map","TaskInput","addTask","setOpenModal","setTask","Box","flexDirection","alignItems","TextField","autoComplete","margin","required","fullWidth","label","name","autoFocus","e","value","TaskManager","tasks","setTasks","openModal","useEffect","Backdrop","open","oldTasks","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKAAe,I,yFCwFAA,MAhFf,YAA0C,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,aAEtBC,QAAQC,IAAI,yBAA0BH,EAAUI,IAEhD,MAAkCC,mBAASL,EAAUM,MAArD,mBAAOC,EAAP,KACA,GADA,KACkCF,mBAAS,SAA3C,mBAAOG,EAAP,KACA,GADA,KACkCH,oBAAS,IAA3C,mBAAOI,EAAP,KAAgBC,EAAhB,KAoBMC,EAlBYC,YAAW,CAEzBC,MAAO,CACHC,MAAc,OACdC,UAAc,OACdC,QAAc,OACdC,oBAAqB,YAYbC,GAEhB,OAEI,cAACC,EAAA,EAAOC,IAAR,CAEAC,MAAS,CACLP,MAAO,QAGXQ,QAAW,CAACC,QAAS,GACrBC,QAAW,CAACD,QAAS,GAPrB,SAWI,eAACV,EAAA,EAAD,CAEAL,UAAaG,EAAQE,MAFrB,UAKI,gCACI,cAACY,EAAA,EAAD,CAEAC,SA9BK,SAACC,GAElBjB,EAAWiB,EAAMC,OAAOnB,SACxBP,QAAQC,IAAIwB,EAAMC,OAAOnB,YA+Bb,qBAAKD,UAAa,SAAWC,GAAWD,GAAxC,SACKD,OAIT,cAACsB,EAAA,EAAD,CAEIC,KAAc,QACdC,MAAc,QACdC,QAAc,YACdX,MAAe,CAACY,YAAa,MAAOC,aAAc,KAClDC,UAAe,cAAC,IAAD,IAEfC,kBAAgB,EAEhBC,QAAepC,EAVnB,2BC1CDqC,MAnBf,YAAiD,IAA3BC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,WAE/B,EAA0BnC,mBAASkC,GAAnC,mBAEA,OAFA,UAGI,qBAAK/B,UAAY,eAAjB,SAEK+B,EAAYE,KAAK,SAACnC,GACf,OAEI,cAAC,EAAD,CAAMN,UAAaM,EAAML,aAAgBuC,U,kBC0C9CE,MAlDf,YAA6C,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,aAEzB,EAAwBvC,mBAAS,IAAjC,mBAAOC,EAAP,KAAauC,EAAb,KASA,OACI,qBAAKrC,UAAU,aAAf,SAEI,eAACsC,EAAA,EAAD,CAEA9B,QAAkB,OAClB+B,cAAkB,SAClBC,WAAkB,SAJlB,UAQA,cAACC,EAAA,EAAD,CACAC,aAAa,QACbC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTjD,GAAG,OACHkD,MAAM,WACNC,KAAK,OACLC,WAAS,EAET9B,SAAa,SAAC+B,GACVZ,EAAQY,EAAE7B,OAAO8B,UAKrB,cAAC7B,EAAA,EAAD,CAEAQ,QApCa,WAEjBM,EAAQrC,GACRsC,GAAa,IA+BT,0B,2CC4CGe,MA3Ef,WAEI,IAAIvD,EAAK,EAET,EAAkCC,mBAAS,IAA3C,mBAAOuD,EAAP,KAAkBC,EAAlB,KACA,EAAkCxD,oBAAS,GAA3C,mBAAOyD,EAAP,KAAkBlB,EAAlB,KA2BA,OANAmB,qBAAU,WAEN7D,QAAQC,IAAIyD,KAEb,CAACA,IAGA,gCACI,eAAC/B,EAAA,EAAD,CAEAG,QAAQ,YACRI,kBAAgB,EAChBC,QAAU,WAAOO,GAAa,IAJ9B,gBAMI,cAAC,IAAD,OAIJ,cAAC,EAAD,CAAaL,YAAaqB,EAAOpB,WAtBtB,SAACjC,GAChBL,QAAQC,IAAII,MAuBR,cAACyD,EAAA,EAAD,CAEAC,KAAQH,EAFR,SAMI,eAACjD,EAAA,EAAD,WACI,cAACgB,EAAA,EAAD,CAEAQ,QAAS,WAAOO,GAAa,IAF7B,SAKI,cAAC,IAAD,MAGJ,cAAC,EAAD,CAEAD,QAxDA,SAACpC,GAEb,IAAM2D,EAAQ,YAAON,GAErBM,EAASC,KAAK,CACV7D,KAAMC,EACNH,GAAIA,IAGRyD,EAASK,GAET9D,GAAM,GA8CMwC,aAAmBA,aCxDxBwB,MAhBf,WACI,OACI,qBAAK5D,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UAEI,6CAIA,cAAC,EAAD,UCHD6D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.7d688845.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react'\r\n\r\nimport { Checkbox, Paper, Button } from '@mui/material'\r\nimport { makeStyles } from '@mui/styles'\r\n\r\nimport { motion } from 'framer-motion'\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nfunction Task({dataParam, handleRemove}) {\r\n\r\n    console.log(\"New task created! ID: \", dataParam.id)\r\n\r\n    const [data, setData]           = useState(dataParam.task)\r\n    const [className, setClassName] = useState('done')\r\n    const [checked, setChecked]     = useState(false)\r\n\r\n    const useStyles = makeStyles({\r\n\r\n        Paper: {\r\n            width       : \"100%\",\r\n            textAlign   : \"left\",\r\n            display     : \"grid\",\r\n            gridTemplateColumns: \"1fr 1fr\"\r\n        }\r\n\r\n    })\r\n\r\n    const handleChange = (event) => {\r\n\r\n        setChecked(event.target.checked)\r\n        console.log(event.target.checked)\r\n\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <motion.div\r\n        \r\n        style = {{\r\n            width: \"100%\"\r\n        }}\r\n\r\n        initial = {{opacity: 0}}\r\n        animate = {{opacity: 1}}\r\n        \r\n        \r\n        >\r\n            <Paper\r\n\r\n            className = {classes.Paper}\r\n\r\n            >\r\n                <div>\r\n                    <Checkbox\r\n                    \r\n                    onChange = {handleChange} \r\n                    \r\n                    ></Checkbox>\r\n\r\n                    <div className = {\"task \" + (checked && className)}>\r\n                        {data}\r\n                    </div>\r\n                </div>\r\n\r\n                <Button\r\n                    \r\n                    size        = \"small\"\r\n                    color       = \"error\"\r\n                    variant     = \"contained\"\r\n                    style       = {{justifySelf: \"end\", borderRadius: \"0\"}}\r\n                    startIcon   = {<DeleteIcon />}\r\n\r\n                    disableElevation\r\n\r\n                    onClick     = {handleRemove}\r\n\r\n                > REMOVE</Button>\r\n\r\n\r\n\r\n            </Paper>\r\n        </motion.div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Task\r\n","import { makeStyles } from '@mui/material';\r\nimport React, { useState } from 'react'\r\n\r\nimport Task from './Task';\r\n\r\nfunction TaskDisplay({activeTasks, removeTask}) {\r\n\r\n    const [tasks, setTasks] = useState(activeTasks);\r\n\r\n    return (\r\n        <div className = \"task-display\">\r\n\r\n            {activeTasks.map( (task) => {\r\n                return(\r\n\r\n                    <Task dataParam = {task} handleRemove = {removeTask}></Task>\r\n\r\n                )\r\n            } )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskDisplay\r\n","import React, { useState } from 'react'\r\n\r\nimport { Box } from '@mui/system'\r\nimport { TextField } from '@mui/material'\r\n\r\nimport { Button } from '@mui/material'\r\n\r\nfunction TaskInput({addTask, setOpenModal}) {\r\n\r\n    const [task, setTask] = useState('');\r\n\r\n    const handleSubmit = () => {\r\n\r\n        addTask(task);\r\n        setOpenModal(false);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"task-input\">\r\n            \r\n            <Box\r\n            \r\n            display         = \"flex\"\r\n            flexDirection   = \"column\"\r\n            alignItems      = \"center\"\r\n\r\n            >\r\n\r\n            <TextField\r\n            autoComplete=\"false\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"task\"\r\n            label=\"New Task\"\r\n            name=\"task\"\r\n            autoFocus\r\n\r\n            onChange = { (e) => {\r\n                setTask(e.target.value)\r\n            } }\r\n\r\n            />\r\n\r\n            <Button\r\n            \r\n            onClick = {handleSubmit}\r\n            \r\n            >SUBMIT</Button>\r\n\r\n            </Box>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskInput\r\n","import { useState, useEffect } from \"react\";\r\nimport React        from 'react'\r\n\r\nimport TaskDisplay  from \"./TaskDisplay\";\r\nimport TaskInput    from \"./TaskInput\";\r\n\r\nimport { Paper }    from \"@mui/material\";\r\nimport { Button }   from \"@mui/material\";\r\nimport AddIcon      from '@mui/icons-material/Add';\r\nimport { Backdrop } from \"@mui/material\";\r\n\r\nimport CloseIcon    from '@mui/icons-material/Close';\r\n\r\n\r\nfunction TaskManager() {\r\n\r\n    var id = 0;\r\n\r\n    const [tasks    , setTasks]     = useState([]);\r\n    const [openModal, setOpenModal] = useState(false)\r\n\r\n    const addTask = (data) => {\r\n\r\n        const oldTasks = [...tasks];\r\n\r\n        oldTasks.push({\r\n            task: data,\r\n            id: id\r\n        });\r\n\r\n        setTasks(oldTasks);\r\n\r\n        id += 1;\r\n\r\n    }\r\n\r\n    const removeTask = (data) => {\r\n        console.log(data);\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n        console.log(tasks)\r\n        \r\n    }, [tasks])\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n            \r\n            variant=\"contained\"\r\n            disableElevation\r\n            onClick={ () => {setOpenModal(true)} }\r\n\r\n            >   <AddIcon></AddIcon>\r\n            \r\n            </Button>\r\n\r\n            <TaskDisplay activeTasks={tasks} removeTask = {removeTask}></TaskDisplay>\r\n\r\n            <Backdrop\r\n            \r\n            open = {openModal}\r\n            \r\n            >\r\n\r\n                <Paper>\r\n                    <Button\r\n                    \r\n                    onClick={() => {setOpenModal(false)}}\r\n                    \r\n                    >\r\n                        <CloseIcon></CloseIcon>\r\n\r\n                    </Button>\r\n                    <TaskInput\r\n                    \r\n                    addTask         = {addTask}\r\n                    setOpenModal    = {setOpenModal}\r\n                    \r\n                    ></TaskInput>\r\n                </Paper>\r\n\r\n            </Backdrop>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskManager\r\n","import logo from './logo.svg';\nimport './App.css';\n\nimport TaskManager from './components/TaskManager';\nimport TaskDisplay from './components/TaskDisplay';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n\n                <h1>\n                    What To-Do?\n                </h1>\n\n                <TaskManager></TaskManager>\n\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}