{"version":3,"sources":["logo.svg","components/Task.js","components/TaskDisplay.js","components/TaskInput.js","components/TaskManager.js","App.js","reportWebVitals.js","index.js"],"names":["Task","dataParam","useState","task","data","className","checked","setChecked","classes","makeStyles","Paper","width","textAlign","useStyles","motion","div","style","initial","opacity","y","animate","Checkbox","onChange","event","target","console","log","TaskDisplay","activeTasks","map","TaskInput","addTask","setOpenModal","setTask","Box","display","flexDirection","alignItems","TextField","autoComplete","margin","required","fullWidth","id","label","name","autoFocus","e","value","Button","onClick","TaskManager","tasks","setTasks","openModal","useEffect","variant","disableElevation","Backdrop","open","oldTasks","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b29e5d6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react'\r\n\r\nimport { Checkbox, Paper } from '@mui/material'\r\nimport { makeStyles } from '@mui/styles'\r\n\r\nimport { motion } from 'framer-motion'\r\n\r\nfunction Task({dataParam}) {\r\n\r\n    const [data, setData]           = useState(dataParam.task)\r\n    const [className, setClassName] = useState('done')\r\n    const [checked, setChecked]     = useState(false)\r\n\r\n    const useStyles = makeStyles({\r\n\r\n        Paper: {\r\n            width       : \"100%\",\r\n            textAlign   : \"left\"\r\n        }\r\n\r\n    })\r\n\r\n    const handleChange = (event) => {\r\n\r\n        setChecked(event.target.checked)\r\n        console.log(event.target.checked)\r\n\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <motion.div\r\n        \r\n        style = {{\r\n            width: \"100%\"\r\n        }}\r\n\r\n        initial = {{opacity: 0, y: -2000}}\r\n        animate = {{opacity: 1, y: 0}}\r\n        \r\n        \r\n        >\r\n            <Paper\r\n\r\n            className = {classes.Paper}\r\n\r\n            >\r\n                <Checkbox\r\n                \r\n                onChange = {handleChange} \r\n                \r\n                ></Checkbox>\r\n\r\n                <div className = {\"task \" + (checked && className)}>\r\n                    {data}\r\n                </div>\r\n\r\n            </Paper>\r\n        </motion.div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Task\r\n","import { makeStyles } from '@mui/material';\r\nimport React, { useState } from 'react'\r\n\r\nimport Task from './Task';\r\n\r\nfunction TaskDisplay({activeTasks}) {\r\n\r\n    const [tasks, setTasks] = useState(activeTasks);\r\n\r\n    return (\r\n        <div className = \"task-display\">\r\n\r\n            {activeTasks.map( (task) => {\r\n                return(\r\n\r\n                    <Task dataParam = {task}></Task>\r\n\r\n                )\r\n            } )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskDisplay\r\n","import React, { useState } from 'react'\r\n\r\nimport { Box } from '@mui/system'\r\nimport { TextField } from '@mui/material'\r\n\r\nimport { Button } from '@mui/material'\r\n\r\nfunction TaskInput({addTask, setOpenModal}) {\r\n\r\n    const [task, setTask] = useState('');\r\n\r\n    const handleSubmit = () => {\r\n\r\n        addTask(task);\r\n        setOpenModal(false);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"task-input\">\r\n            \r\n            <Box\r\n            \r\n            display         = \"flex\"\r\n            flexDirection   = \"column\"\r\n            alignItems      = \"center\"\r\n\r\n            >\r\n\r\n            <TextField\r\n            autoComplete=\"false\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"task\"\r\n            label=\"New Task\"\r\n            name=\"task\"\r\n            autoFocus\r\n\r\n            onChange = { (e) => {\r\n                setTask(e.target.value)\r\n            } }\r\n\r\n            />\r\n\r\n            <Button\r\n            \r\n            onClick = {handleSubmit}\r\n            \r\n            >SUBMIT</Button>\r\n\r\n            </Box>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskInput\r\n","import { useState, useEffect } from \"react\";\r\nimport React        from 'react'\r\n\r\nimport TaskDisplay  from \"./TaskDisplay\";\r\nimport TaskInput    from \"./TaskInput\";\r\n\r\nimport { Paper }    from \"@mui/material\";\r\nimport { Button }   from \"@mui/material\";\r\nimport AddIcon      from '@mui/icons-material/Add';\r\nimport { Backdrop } from \"@mui/material\";\r\n\r\nimport CloseIcon    from '@mui/icons-material/Close';\r\n\r\n\r\nfunction TaskManager() {\r\n\r\n    const [tasks    , setTasks]     = useState([]);\r\n    const [openModal, setOpenModal] = useState(false)\r\n\r\n    const addTask = (data) => {\r\n\r\n        const oldTasks = [...tasks];\r\n\r\n        oldTasks.push({\r\n            task: data\r\n        });\r\n\r\n        setTasks(oldTasks);\r\n\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n        console.log(tasks)\r\n        \r\n    }, [tasks])\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n            \r\n            variant=\"contained\"\r\n            disableElevation\r\n            onClick={ () => {setOpenModal(true)} }\r\n\r\n            >   <AddIcon></AddIcon>\r\n            \r\n            </Button>\r\n\r\n            <TaskDisplay activeTasks={tasks}></TaskDisplay>\r\n\r\n            <Backdrop\r\n            \r\n            open = {openModal}\r\n            \r\n            >\r\n\r\n                <Paper>\r\n                    <Button\r\n                    \r\n                    onClick={() => {setOpenModal(false)}}\r\n                    \r\n                    >\r\n                        <CloseIcon></CloseIcon>\r\n\r\n                    </Button>\r\n                    <TaskInput\r\n                    \r\n                    addTask         = {addTask}\r\n                    setOpenModal    = {setOpenModal}\r\n                    \r\n                    ></TaskInput>\r\n                </Paper>\r\n\r\n            </Backdrop>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskManager\r\n","import logo from './logo.svg';\nimport './App.css';\n\nimport TaskManager from './components/TaskManager';\nimport TaskDisplay from './components/TaskDisplay';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n\n                <h1>\n                    What To-Do Tessa?\n                </h1>\n\n                <TaskManager></TaskManager>\n\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}